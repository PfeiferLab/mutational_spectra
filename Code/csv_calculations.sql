-- Writen By Suhail Ghafoor
-- Date Dec 4, 2022

/*
All the csvs were uploaded to a sql server where
calculations were performed on streaming data as 
more simulations outputs came in. This is the code
that was used to calculate differences between different
sample sizes
*/


-- Step 1
-- Create a view that contains percentage distribution of each 
-- mutation type for each sample size except for whole population
-- MUTGEN_SAMPLED_AVG
SELECT 
POP AS POP_SAMP,
SAMPLE_SIZE,
"AAA>C"/TOTAL_MUT AS AAA_C_SAMP,
"AAA>G"/TOTAL_MUT AS AAA_G_SAMP,
"AAA>T"/TOTAL_MUT AS AAA_T_SAMP,
"AAC>C"/TOTAL_MUT AS AAC_C_SAMP,
"AAC>G"/TOTAL_MUT AS AAC_G_SAMP,
"AAC>T"/TOTAL_MUT AS AAC_T_SAMP,
"AAG>C"/TOTAL_MUT AS AAG_C_SAMP,
"AAG>G"/TOTAL_MUT AS AAG_G_SAMP,
"AAG>T"/TOTAL_MUT AS AAG_T_SAMP,
"AAT>C"/TOTAL_MUT AS AAT_C_SAMP,
"AAT>G"/TOTAL_MUT AS AAT_G_SAMP,
"AAT>T"/TOTAL_MUT AS AAT_T_SAMP,
"ACA>A"/TOTAL_MUT AS ACA_A_SAMP,
"ACA>G"/TOTAL_MUT AS ACA_G_SAMP,
"ACA>T"/TOTAL_MUT AS ACA_T_SAMP,
"ACC>A"/TOTAL_MUT AS ACC_A_SAMP,
"ACC>G"/TOTAL_MUT AS ACC_G_SAMP,
"ACC>T"/TOTAL_MUT AS ACC_T_SAMP,
"ACG>A"/TOTAL_MUT AS ACG_A_SAMP,
"ACG>G"/TOTAL_MUT AS ACG_G_SAMP,
"ACG>T"/TOTAL_MUT AS ACG_T_SAMP,
"ACT>A"/TOTAL_MUT AS ACT_A_SAMP,
"ACT>G"/TOTAL_MUT AS ACT_G_SAMP,
"ACT>T"/TOTAL_MUT AS ACT_T_SAMP,
"AGA>A"/TOTAL_MUT AS AGA_A_SAMP,
"AGA>C"/TOTAL_MUT AS AGA_C_SAMP,
"AGA>T"/TOTAL_MUT AS AGA_T_SAMP,
"AGC>A"/TOTAL_MUT AS AGC_A_SAMP,
"AGC>C"/TOTAL_MUT AS AGC_C_SAMP,
"AGC>T"/TOTAL_MUT AS AGC_T_SAMP,
"AGG>A"/TOTAL_MUT AS AGG_A_SAMP,
"AGG>C"/TOTAL_MUT AS AGG_C_SAMP,
"AGG>T"/TOTAL_MUT AS AGG_T_SAMP,
"AGT>A"/TOTAL_MUT AS AGT_A_SAMP,
"AGT>C"/TOTAL_MUT AS AGT_C_SAMP,
"AGT>T"/TOTAL_MUT AS AGT_T_SAMP,
"ATA>A"/TOTAL_MUT AS ATA_A_SAMP,
"ATA>C"/TOTAL_MUT AS ATA_C_SAMP,
"ATA>G"/TOTAL_MUT AS ATA_G_SAMP,
"ATC>A"/TOTAL_MUT AS ATC_A_SAMP,
"ATC>C"/TOTAL_MUT AS ATC_C_SAMP,
"ATC>G"/TOTAL_MUT AS ATC_G_SAMP,
"ATG>A"/TOTAL_MUT AS ATG_A_SAMP,
"ATG>C"/TOTAL_MUT AS ATG_C_SAMP,
"ATG>G"/TOTAL_MUT AS ATG_G_SAMP,
"ATT>A"/TOTAL_MUT AS ATT_A_SAMP,
"ATT>C"/TOTAL_MUT AS ATT_C_SAMP,
"ATT>G"/TOTAL_MUT AS ATT_G_SAMP,
"CAA>C"/TOTAL_MUT AS CAA_C_SAMP,
"CAA>G"/TOTAL_MUT AS CAA_G_SAMP,
"CAA>T"/TOTAL_MUT AS CAA_T_SAMP,
"CAC>C"/TOTAL_MUT AS CAC_C_SAMP,
"CAC>G"/TOTAL_MUT AS CAC_G_SAMP,
"CAC>T"/TOTAL_MUT AS CAC_T_SAMP,
"CAG>C"/TOTAL_MUT AS CAG_C_SAMP,
"CAG>G"/TOTAL_MUT AS CAG_G_SAMP,
"CAG>T"/TOTAL_MUT AS CAG_T_SAMP,
"CAT>C"/TOTAL_MUT AS CAT_C_SAMP,
"CAT>G"/TOTAL_MUT AS CAT_G_SAMP,
"CAT>T"/TOTAL_MUT AS CAT_T_SAMP,
"CCA>A"/TOTAL_MUT AS CCA_A_SAMP,
"CCA>G"/TOTAL_MUT AS CCA_G_SAMP,
"CCA>T"/TOTAL_MUT AS CCA_T_SAMP,
"CCC>A"/TOTAL_MUT AS CCC_A_SAMP,
"CCC>G"/TOTAL_MUT AS CCC_G_SAMP,
"CCC>T"/TOTAL_MUT AS CCC_T_SAMP,
"CCG>A"/TOTAL_MUT AS CCG_A_SAMP,
"CCG>G"/TOTAL_MUT AS CCG_G_SAMP,
"CCG>T"/TOTAL_MUT AS CCG_T_SAMP,
"CCT>A"/TOTAL_MUT AS CCT_A_SAMP,
"CCT>G"/TOTAL_MUT AS CCT_G_SAMP,
"CCT>T"/TOTAL_MUT AS CCT_T_SAMP,
"CGA>A"/TOTAL_MUT AS CGA_A_SAMP,
"CGA>C"/TOTAL_MUT AS CGA_C_SAMP,
"CGA>T"/TOTAL_MUT AS CGA_T_SAMP,
"CGC>A"/TOTAL_MUT AS CGC_A_SAMP,
"CGC>C"/TOTAL_MUT AS CGC_C_SAMP,
"CGC>T"/TOTAL_MUT AS CGC_T_SAMP,
"CGG>A"/TOTAL_MUT AS CGG_A_SAMP,
"CGG>C"/TOTAL_MUT AS CGG_C_SAMP,
"CGG>T"/TOTAL_MUT AS CGG_T_SAMP,
"CGT>A"/TOTAL_MUT AS CGT_A_SAMP,
"CGT>C"/TOTAL_MUT AS CGT_C_SAMP,
"CGT>T"/TOTAL_MUT AS CGT_T_SAMP,
"CTA>A"/TOTAL_MUT AS CTA_A_SAMP,
"CTA>C"/TOTAL_MUT AS CTA_C_SAMP,
"CTA>G"/TOTAL_MUT AS CTA_G_SAMP,
"CTC>A"/TOTAL_MUT AS CTC_A_SAMP,
"CTC>C"/TOTAL_MUT AS CTC_C_SAMP,
"CTC>G"/TOTAL_MUT AS CTC_G_SAMP,
"CTG>A"/TOTAL_MUT AS CTG_A_SAMP,
"CTG>C"/TOTAL_MUT AS CTG_C_SAMP,
"CTG>G"/TOTAL_MUT AS CTG_G_SAMP,
"CTT>A"/TOTAL_MUT AS CTT_A_SAMP,
"CTT>C"/TOTAL_MUT AS CTT_C_SAMP,
"CTT>G"/TOTAL_MUT AS CTT_G_SAMP,
"GAA>C"/TOTAL_MUT AS GAA_C_SAMP,
"GAA>G"/TOTAL_MUT AS GAA_G_SAMP,
"GAA>T"/TOTAL_MUT AS GAA_T_SAMP,
"GAC>C"/TOTAL_MUT AS GAC_C_SAMP,
"GAC>G"/TOTAL_MUT AS GAC_G_SAMP,
"GAC>T"/TOTAL_MUT AS GAC_T_SAMP,
"GAG>C"/TOTAL_MUT AS GAG_C_SAMP,
"GAG>G"/TOTAL_MUT AS GAG_G_SAMP,
"GAG>T"/TOTAL_MUT AS GAG_T_SAMP,
"GAT>C"/TOTAL_MUT AS GAT_C_SAMP,
"GAT>G"/TOTAL_MUT AS GAT_G_SAMP,
"GAT>T"/TOTAL_MUT AS GAT_T_SAMP,
"GCA>A"/TOTAL_MUT AS GCA_A_SAMP,
"GCA>G"/TOTAL_MUT AS GCA_G_SAMP,
"GCA>T"/TOTAL_MUT AS GCA_T_SAMP,
"GCC>A"/TOTAL_MUT AS GCC_A_SAMP,
"GCC>G"/TOTAL_MUT AS GCC_G_SAMP,
"GCC>T"/TOTAL_MUT AS GCC_T_SAMP,
"GCG>A"/TOTAL_MUT AS GCG_A_SAMP,
"GCG>G"/TOTAL_MUT AS GCG_G_SAMP,
"GCG>T"/TOTAL_MUT AS GCG_T_SAMP,
"GCT>A"/TOTAL_MUT AS GCT_A_SAMP,
"GCT>G"/TOTAL_MUT AS GCT_G_SAMP,
"GCT>T"/TOTAL_MUT AS GCT_T_SAMP,
"GGA>A"/TOTAL_MUT AS GGA_A_SAMP,
"GGA>C"/TOTAL_MUT AS GGA_C_SAMP,
"GGA>T"/TOTAL_MUT AS GGA_T_SAMP,
"GGC>A"/TOTAL_MUT AS GGC_A_SAMP,
"GGC>C"/TOTAL_MUT AS GGC_C_SAMP,
"GGC>T"/TOTAL_MUT AS GGC_T_SAMP,
"GGG>A"/TOTAL_MUT AS GGG_A_SAMP,
"GGG>C"/TOTAL_MUT AS GGG_C_SAMP,
"GGG>T"/TOTAL_MUT AS GGG_T_SAMP,
"GGT>A"/TOTAL_MUT AS GGT_A_SAMP,
"GGT>C"/TOTAL_MUT AS GGT_C_SAMP,
"GGT>T"/TOTAL_MUT AS GGT_T_SAMP,
"GTA>A"/TOTAL_MUT AS GTA_A_SAMP,
"GTA>C"/TOTAL_MUT AS GTA_C_SAMP,
"GTA>G"/TOTAL_MUT AS GTA_G_SAMP,
"GTC>A"/TOTAL_MUT AS GTC_A_SAMP,
"GTC>C"/TOTAL_MUT AS GTC_C_SAMP,
"GTC>G"/TOTAL_MUT AS GTC_G_SAMP,
"GTG>A"/TOTAL_MUT AS GTG_A_SAMP,
"GTG>C"/TOTAL_MUT AS GTG_C_SAMP,
"GTG>G"/TOTAL_MUT AS GTG_G_SAMP,
"GTT>A"/TOTAL_MUT AS GTT_A_SAMP,
"GTT>C"/TOTAL_MUT AS GTT_C_SAMP,
"GTT>G"/TOTAL_MUT AS GTT_G_SAMP,
"TAA>C"/TOTAL_MUT AS TAA_C_SAMP,
"TAA>G"/TOTAL_MUT AS TAA_G_SAMP,
"TAA>T"/TOTAL_MUT AS TAA_T_SAMP,
"TAC>C"/TOTAL_MUT AS TAC_C_SAMP,
"TAC>G"/TOTAL_MUT AS TAC_G_SAMP,
"TAC>T"/TOTAL_MUT AS TAC_T_SAMP,
"TAG>C"/TOTAL_MUT AS TAG_C_SAMP,
"TAG>G"/TOTAL_MUT AS TAG_G_SAMP,
"TAG>T"/TOTAL_MUT AS TAG_T_SAMP,
"TAT>C"/TOTAL_MUT AS TAT_C_SAMP,
"TAT>G"/TOTAL_MUT AS TAT_G_SAMP,
"TAT>T"/TOTAL_MUT AS TAT_T_SAMP,
"TCA>A"/TOTAL_MUT AS TCA_A_SAMP,
"TCA>G"/TOTAL_MUT AS TCA_G_SAMP,
"TCA>T"/TOTAL_MUT AS TCA_T_SAMP,
"TCC>A"/TOTAL_MUT AS TCC_A_SAMP,
"TCC>G"/TOTAL_MUT AS TCC_G_SAMP,
"TCC>T"/TOTAL_MUT AS TCC_T_SAMP,
"TCG>A"/TOTAL_MUT AS TCG_A_SAMP,
"TCG>G"/TOTAL_MUT AS TCG_G_SAMP,
"TCG>T"/TOTAL_MUT AS TCG_T_SAMP,
"TCT>A"/TOTAL_MUT AS TCT_A_SAMP,
"TCT>G"/TOTAL_MUT AS TCT_G_SAMP,
"TCT>T"/TOTAL_MUT AS TCT_T_SAMP,
"TGA>A"/TOTAL_MUT AS TGA_A_SAMP,
"TGA>C"/TOTAL_MUT AS TGA_C_SAMP,
"TGA>T"/TOTAL_MUT AS TGA_T_SAMP,
"TGC>A"/TOTAL_MUT AS TGC_A_SAMP,
"TGC>C"/TOTAL_MUT AS TGC_C_SAMP,
"TGC>T"/TOTAL_MUT AS TGC_T_SAMP,
"TGG>A"/TOTAL_MUT AS TGG_A_SAMP,
"TGG>C"/TOTAL_MUT AS TGG_C_SAMP,
"TGG>T"/TOTAL_MUT AS TGG_T_SAMP,
"TGT>A"/TOTAL_MUT AS TGT_A_SAMP,
"TGT>C"/TOTAL_MUT AS TGT_C_SAMP,
"TGT>T"/TOTAL_MUT AS TGT_T_SAMP,
"TTA>A"/TOTAL_MUT AS TTA_A_SAMP,
"TTA>C"/TOTAL_MUT AS TTA_C_SAMP,
"TTA>G"/TOTAL_MUT AS TTA_G_SAMP,
"TTC>A"/TOTAL_MUT AS TTC_A_SAMP,
"TTC>C"/TOTAL_MUT AS TTC_C_SAMP,
"TTC>G"/TOTAL_MUT AS TTC_G_SAMP,
"TTG>A"/TOTAL_MUT AS TTG_A_SAMP,
"TTG>C"/TOTAL_MUT AS TTG_C_SAMP,
"TTG>G"/TOTAL_MUT AS TTG_G_SAMP,
"TTT>A"/TOTAL_MUT AS TTT_A_SAMP,
"TTT>C"/TOTAL_MUT AS TTT_C_SAMP,
"TTT>G"/TOTAL_MUT AS TTT_G_SAMP
FROM 
    MUTGEN
WHERE
    SAMPLE_SIZE != 0


-- Step 2
-- Calculate the average distribution of each mutation type 
-- in the entire population MUTGEN_SAMPLED_AVG
-- MUTGEN_FULLSAMPLE_AVG
SELECT 
    POP AS POP_FULL,
AVG("AAA>C"/TOTAL_MUT) AS AAA_C_FULL,
AVG("AAA>G"/TOTAL_MUT) AS AAA_G_FULL,
AVG("AAA>T"/TOTAL_MUT) AS AAA_T_FULL,
AVG("AAC>C"/TOTAL_MUT) AS AAC_C_FULL,
AVG("AAC>G"/TOTAL_MUT) AS AAC_G_FULL,
AVG("AAC>T"/TOTAL_MUT) AS AAC_T_FULL,
AVG("AAG>C"/TOTAL_MUT) AS AAG_C_FULL,
AVG("AAG>G"/TOTAL_MUT) AS AAG_G_FULL,
AVG("AAG>T"/TOTAL_MUT) AS AAG_T_FULL,
AVG("AAT>C"/TOTAL_MUT) AS AAT_C_FULL,
AVG("AAT>G"/TOTAL_MUT) AS AAT_G_FULL,
AVG("AAT>T"/TOTAL_MUT) AS AAT_T_FULL,
AVG("ACA>A"/TOTAL_MUT) AS ACA_A_FULL,
AVG("ACA>G"/TOTAL_MUT) AS ACA_G_FULL,
AVG("ACA>T"/TOTAL_MUT) AS ACA_T_FULL,
AVG("ACC>A"/TOTAL_MUT) AS ACC_A_FULL,
AVG("ACC>G"/TOTAL_MUT) AS ACC_G_FULL,
AVG("ACC>T"/TOTAL_MUT) AS ACC_T_FULL,
AVG("ACG>A"/TOTAL_MUT) AS ACG_A_FULL,
AVG("ACG>G"/TOTAL_MUT) AS ACG_G_FULL,
AVG("ACG>T"/TOTAL_MUT) AS ACG_T_FULL,
AVG("ACT>A"/TOTAL_MUT) AS ACT_A_FULL,
AVG("ACT>G"/TOTAL_MUT) AS ACT_G_FULL,
AVG("ACT>T"/TOTAL_MUT) AS ACT_T_FULL,
AVG("AGA>A"/TOTAL_MUT) AS AGA_A_FULL,
AVG("AGA>C"/TOTAL_MUT) AS AGA_C_FULL,
AVG("AGA>T"/TOTAL_MUT) AS AGA_T_FULL,
AVG("AGC>A"/TOTAL_MUT) AS AGC_A_FULL,
AVG("AGC>C"/TOTAL_MUT) AS AGC_C_FULL,
AVG("AGC>T"/TOTAL_MUT) AS AGC_T_FULL,
AVG("AGG>A"/TOTAL_MUT) AS AGG_A_FULL,
AVG("AGG>C"/TOTAL_MUT) AS AGG_C_FULL,
AVG("AGG>T"/TOTAL_MUT) AS AGG_T_FULL,
AVG("AGT>A"/TOTAL_MUT) AS AGT_A_FULL,
AVG("AGT>C"/TOTAL_MUT) AS AGT_C_FULL,
AVG("AGT>T"/TOTAL_MUT) AS AGT_T_FULL,
AVG("ATA>A"/TOTAL_MUT) AS ATA_A_FULL,
AVG("ATA>C"/TOTAL_MUT) AS ATA_C_FULL,
AVG("ATA>G"/TOTAL_MUT) AS ATA_G_FULL,
AVG("ATC>A"/TOTAL_MUT) AS ATC_A_FULL,
AVG("ATC>C"/TOTAL_MUT) AS ATC_C_FULL,
AVG("ATC>G"/TOTAL_MUT) AS ATC_G_FULL,
AVG("ATG>A"/TOTAL_MUT) AS ATG_A_FULL,
AVG("ATG>C"/TOTAL_MUT) AS ATG_C_FULL,
AVG("ATG>G"/TOTAL_MUT) AS ATG_G_FULL,
AVG("ATT>A"/TOTAL_MUT) AS ATT_A_FULL,
AVG("ATT>C"/TOTAL_MUT) AS ATT_C_FULL,
AVG("ATT>G"/TOTAL_MUT) AS ATT_G_FULL,
AVG("CAA>C"/TOTAL_MUT) AS CAA_C_FULL,
AVG("CAA>G"/TOTAL_MUT) AS CAA_G_FULL,
AVG("CAA>T"/TOTAL_MUT) AS CAA_T_FULL,
AVG("CAC>C"/TOTAL_MUT) AS CAC_C_FULL,
AVG("CAC>G"/TOTAL_MUT) AS CAC_G_FULL,
AVG("CAC>T"/TOTAL_MUT) AS CAC_T_FULL,
AVG("CAG>C"/TOTAL_MUT) AS CAG_C_FULL,
AVG("CAG>G"/TOTAL_MUT) AS CAG_G_FULL,
AVG("CAG>T"/TOTAL_MUT) AS CAG_T_FULL,
AVG("CAT>C"/TOTAL_MUT) AS CAT_C_FULL,
AVG("CAT>G"/TOTAL_MUT) AS CAT_G_FULL,
AVG("CAT>T"/TOTAL_MUT) AS CAT_T_FULL,
AVG("CCA>A"/TOTAL_MUT) AS CCA_A_FULL,
AVG("CCA>G"/TOTAL_MUT) AS CCA_G_FULL,
AVG("CCA>T"/TOTAL_MUT) AS CCA_T_FULL,
AVG("CCC>A"/TOTAL_MUT) AS CCC_A_FULL,
AVG("CCC>G"/TOTAL_MUT) AS CCC_G_FULL,
AVG("CCC>T"/TOTAL_MUT) AS CCC_T_FULL,
AVG("CCG>A"/TOTAL_MUT) AS CCG_A_FULL,
AVG("CCG>G"/TOTAL_MUT) AS CCG_G_FULL,
AVG("CCG>T"/TOTAL_MUT) AS CCG_T_FULL,
AVG("CCT>A"/TOTAL_MUT) AS CCT_A_FULL,
AVG("CCT>G"/TOTAL_MUT) AS CCT_G_FULL,
AVG("CCT>T"/TOTAL_MUT) AS CCT_T_FULL,
AVG("CGA>A"/TOTAL_MUT) AS CGA_A_FULL,
AVG("CGA>C"/TOTAL_MUT) AS CGA_C_FULL,
AVG("CGA>T"/TOTAL_MUT) AS CGA_T_FULL,
AVG("CGC>A"/TOTAL_MUT) AS CGC_A_FULL,
AVG("CGC>C"/TOTAL_MUT) AS CGC_C_FULL,
AVG("CGC>T"/TOTAL_MUT) AS CGC_T_FULL,
AVG("CGG>A"/TOTAL_MUT) AS CGG_A_FULL,
AVG("CGG>C"/TOTAL_MUT) AS CGG_C_FULL,
AVG("CGG>T"/TOTAL_MUT) AS CGG_T_FULL,
AVG("CGT>A"/TOTAL_MUT) AS CGT_A_FULL,
AVG("CGT>C"/TOTAL_MUT) AS CGT_C_FULL,
AVG("CGT>T"/TOTAL_MUT) AS CGT_T_FULL,
AVG("CTA>A"/TOTAL_MUT) AS CTA_A_FULL,
AVG("CTA>C"/TOTAL_MUT) AS CTA_C_FULL,
AVG("CTA>G"/TOTAL_MUT) AS CTA_G_FULL,
AVG("CTC>A"/TOTAL_MUT) AS CTC_A_FULL,
AVG("CTC>C"/TOTAL_MUT) AS CTC_C_FULL,
AVG("CTC>G"/TOTAL_MUT) AS CTC_G_FULL,
AVG("CTG>A"/TOTAL_MUT) AS CTG_A_FULL,
AVG("CTG>C"/TOTAL_MUT) AS CTG_C_FULL,
AVG("CTG>G"/TOTAL_MUT) AS CTG_G_FULL,
AVG("CTT>A"/TOTAL_MUT) AS CTT_A_FULL,
AVG("CTT>C"/TOTAL_MUT) AS CTT_C_FULL,
AVG("CTT>G"/TOTAL_MUT) AS CTT_G_FULL,
AVG("GAA>C"/TOTAL_MUT) AS GAA_C_FULL,
AVG("GAA>G"/TOTAL_MUT) AS GAA_G_FULL,
AVG("GAA>T"/TOTAL_MUT) AS GAA_T_FULL,
AVG("GAC>C"/TOTAL_MUT) AS GAC_C_FULL,
AVG("GAC>G"/TOTAL_MUT) AS GAC_G_FULL,
AVG("GAC>T"/TOTAL_MUT) AS GAC_T_FULL,
AVG("GAG>C"/TOTAL_MUT) AS GAG_C_FULL,
AVG("GAG>G"/TOTAL_MUT) AS GAG_G_FULL,
AVG("GAG>T"/TOTAL_MUT) AS GAG_T_FULL,
AVG("GAT>C"/TOTAL_MUT) AS GAT_C_FULL,
AVG("GAT>G"/TOTAL_MUT) AS GAT_G_FULL,
AVG("GAT>T"/TOTAL_MUT) AS GAT_T_FULL,
AVG("GCA>A"/TOTAL_MUT) AS GCA_A_FULL,
AVG("GCA>G"/TOTAL_MUT) AS GCA_G_FULL,
AVG("GCA>T"/TOTAL_MUT) AS GCA_T_FULL,
AVG("GCC>A"/TOTAL_MUT) AS GCC_A_FULL,
AVG("GCC>G"/TOTAL_MUT) AS GCC_G_FULL,
AVG("GCC>T"/TOTAL_MUT) AS GCC_T_FULL,
AVG("GCG>A"/TOTAL_MUT) AS GCG_A_FULL,
AVG("GCG>G"/TOTAL_MUT) AS GCG_G_FULL,
AVG("GCG>T"/TOTAL_MUT) AS GCG_T_FULL,
AVG("GCT>A"/TOTAL_MUT) AS GCT_A_FULL,
AVG("GCT>G"/TOTAL_MUT) AS GCT_G_FULL,
AVG("GCT>T"/TOTAL_MUT) AS GCT_T_FULL,
AVG("GGA>A"/TOTAL_MUT) AS GGA_A_FULL,
AVG("GGA>C"/TOTAL_MUT) AS GGA_C_FULL,
AVG("GGA>T"/TOTAL_MUT) AS GGA_T_FULL,
AVG("GGC>A"/TOTAL_MUT) AS GGC_A_FULL,
AVG("GGC>C"/TOTAL_MUT) AS GGC_C_FULL,
AVG("GGC>T"/TOTAL_MUT) AS GGC_T_FULL,
AVG("GGG>A"/TOTAL_MUT) AS GGG_A_FULL,
AVG("GGG>C"/TOTAL_MUT) AS GGG_C_FULL,
AVG("GGG>T"/TOTAL_MUT) AS GGG_T_FULL,
AVG("GGT>A"/TOTAL_MUT) AS GGT_A_FULL,
AVG("GGT>C"/TOTAL_MUT) AS GGT_C_FULL,
AVG("GGT>T"/TOTAL_MUT) AS GGT_T_FULL,
AVG("GTA>A"/TOTAL_MUT) AS GTA_A_FULL,
AVG("GTA>C"/TOTAL_MUT) AS GTA_C_FULL,
AVG("GTA>G"/TOTAL_MUT) AS GTA_G_FULL,
AVG("GTC>A"/TOTAL_MUT) AS GTC_A_FULL,
AVG("GTC>C"/TOTAL_MUT) AS GTC_C_FULL,
AVG("GTC>G"/TOTAL_MUT) AS GTC_G_FULL,
AVG("GTG>A"/TOTAL_MUT) AS GTG_A_FULL,
AVG("GTG>C"/TOTAL_MUT) AS GTG_C_FULL,
AVG("GTG>G"/TOTAL_MUT) AS GTG_G_FULL,
AVG("GTT>A"/TOTAL_MUT) AS GTT_A_FULL,
AVG("GTT>C"/TOTAL_MUT) AS GTT_C_FULL,
AVG("GTT>G"/TOTAL_MUT) AS GTT_G_FULL,
AVG("TAA>C"/TOTAL_MUT) AS TAA_C_FULL,
AVG("TAA>G"/TOTAL_MUT) AS TAA_G_FULL,
AVG("TAA>T"/TOTAL_MUT) AS TAA_T_FULL,
AVG("TAC>C"/TOTAL_MUT) AS TAC_C_FULL,
AVG("TAC>G"/TOTAL_MUT) AS TAC_G_FULL,
AVG("TAC>T"/TOTAL_MUT) AS TAC_T_FULL,
AVG("TAG>C"/TOTAL_MUT) AS TAG_C_FULL,
AVG("TAG>G"/TOTAL_MUT) AS TAG_G_FULL,
AVG("TAG>T"/TOTAL_MUT) AS TAG_T_FULL,
AVG("TAT>C"/TOTAL_MUT) AS TAT_C_FULL,
AVG("TAT>G"/TOTAL_MUT) AS TAT_G_FULL,
AVG("TAT>T"/TOTAL_MUT) AS TAT_T_FULL,
AVG("TCA>A"/TOTAL_MUT) AS TCA_A_FULL,
AVG("TCA>G"/TOTAL_MUT) AS TCA_G_FULL,
AVG("TCA>T"/TOTAL_MUT) AS TCA_T_FULL,
AVG("TCC>A"/TOTAL_MUT) AS TCC_A_FULL,
AVG("TCC>G"/TOTAL_MUT) AS TCC_G_FULL,
AVG("TCC>T"/TOTAL_MUT) AS TCC_T_FULL,
AVG("TCG>A"/TOTAL_MUT) AS TCG_A_FULL,
AVG("TCG>G"/TOTAL_MUT) AS TCG_G_FULL,
AVG("TCG>T"/TOTAL_MUT) AS TCG_T_FULL,
AVG("TCT>A"/TOTAL_MUT) AS TCT_A_FULL,
AVG("TCT>G"/TOTAL_MUT) AS TCT_G_FULL,
AVG("TCT>T"/TOTAL_MUT) AS TCT_T_FULL,
AVG("TGA>A"/TOTAL_MUT) AS TGA_A_FULL,
AVG("TGA>C"/TOTAL_MUT) AS TGA_C_FULL,
AVG("TGA>T"/TOTAL_MUT) AS TGA_T_FULL,
AVG("TGC>A"/TOTAL_MUT) AS TGC_A_FULL,
AVG("TGC>C"/TOTAL_MUT) AS TGC_C_FULL,
AVG("TGC>T"/TOTAL_MUT) AS TGC_T_FULL,
AVG("TGG>A"/TOTAL_MUT) AS TGG_A_FULL,
AVG("TGG>C"/TOTAL_MUT) AS TGG_C_FULL,
AVG("TGG>T"/TOTAL_MUT) AS TGG_T_FULL,
AVG("TGT>A"/TOTAL_MUT) AS TGT_A_FULL,
AVG("TGT>C"/TOTAL_MUT) AS TGT_C_FULL,
AVG("TGT>T"/TOTAL_MUT) AS TGT_T_FULL,
AVG("TTA>A"/TOTAL_MUT) AS TTA_A_FULL,
AVG("TTA>C"/TOTAL_MUT) AS TTA_C_FULL,
AVG("TTA>G"/TOTAL_MUT) AS TTA_G_FULL,
AVG("TTC>A"/TOTAL_MUT) AS TTC_A_FULL,
AVG("TTC>C"/TOTAL_MUT) AS TTC_C_FULL,
AVG("TTC>G"/TOTAL_MUT) AS TTC_G_FULL,
AVG("TTG>A"/TOTAL_MUT) AS TTG_A_FULL,
AVG("TTG>C"/TOTAL_MUT) AS TTG_C_FULL,
AVG("TTG>G"/TOTAL_MUT) AS TTG_G_FULL,
AVG("TTT>A"/TOTAL_MUT) AS TTT_A_FULL,
AVG("TTT>C"/TOTAL_MUT) AS TTT_C_FULL,
AVG("TTT>G"/TOTAL_MUT) AS TTT_G_FULL
FROM 
    MUTGEN1
WHERE
    SAMPLE_SIZE = 0
GROUP BY
    POP


-- Step 3
-- Join the tables created in Step 1 and 2, adding the
-- AVG calculated in step 2 to each row from step 1
-- MUTGEN_JOIN_FAULL_SAMPLED
SELECT 
    "POP_SAMP","SAMPLE_SIZE","AAA_C_SAMP","AAA_G_SAMP","AAA_T_SAMP","AAC_C_SAMP","AAC_G_SAMP","AAC_T_SAMP","AAG_C_SAMP","AAG_G_SAMP","AAG_T_SAMP","AAT_C_SAMP","AAT_G_SAMP","AAT_T_SAMP","ACA_A_SAMP","ACA_G_SAMP","ACA_T_SAMP","ACC_A_SAMP","ACC_G_SAMP","ACC_T_SAMP","ACG_A_SAMP","ACG_G_SAMP","ACG_T_SAMP","ACT_A_SAMP","ACT_G_SAMP","ACT_T_SAMP","AGA_A_SAMP","AGA_C_SAMP","AGA_T_SAMP","AGC_A_SAMP","AGC_C_SAMP","AGC_T_SAMP","AGG_A_SAMP","AGG_C_SAMP","AGG_T_SAMP","AGT_A_SAMP","AGT_C_SAMP","AGT_T_SAMP","ATA_A_SAMP","ATA_C_SAMP","ATA_G_SAMP","ATC_A_SAMP","ATC_C_SAMP","ATC_G_SAMP","ATG_A_SAMP","ATG_C_SAMP","ATG_G_SAMP","ATT_A_SAMP","ATT_C_SAMP","ATT_G_SAMP","CAA_C_SAMP","CAA_G_SAMP","CAA_T_SAMP","CAC_C_SAMP","CAC_G_SAMP","CAC_T_SAMP","CAG_C_SAMP","CAG_G_SAMP","CAG_T_SAMP","CAT_C_SAMP","CAT_G_SAMP","CAT_T_SAMP","CCA_A_SAMP","CCA_G_SAMP","CCA_T_SAMP","CCC_A_SAMP","CCC_G_SAMP","CCC_T_SAMP","CCG_A_SAMP","CCG_G_SAMP","CCG_T_SAMP","CCT_A_SAMP","CCT_G_SAMP","CCT_T_SAMP","CGA_A_SAMP","CGA_C_SAMP","CGA_T_SAMP","CGC_A_SAMP","CGC_C_SAMP","CGC_T_SAMP","CGG_A_SAMP","CGG_C_SAMP","CGG_T_SAMP","CGT_A_SAMP","CGT_C_SAMP","CGT_T_SAMP","CTA_A_SAMP","CTA_C_SAMP","CTA_G_SAMP","CTC_A_SAMP","CTC_C_SAMP","CTC_G_SAMP","CTG_A_SAMP","CTG_C_SAMP","CTG_G_SAMP","CTT_A_SAMP","CTT_C_SAMP","CTT_G_SAMP","GAA_C_SAMP","GAA_G_SAMP","GAA_T_SAMP","GAC_C_SAMP","GAC_G_SAMP","GAC_T_SAMP","GAG_C_SAMP","GAG_G_SAMP","GAG_T_SAMP","GAT_C_SAMP","GAT_G_SAMP","GAT_T_SAMP","GCA_A_SAMP","GCA_G_SAMP","GCA_T_SAMP","GCC_A_SAMP","GCC_G_SAMP","GCC_T_SAMP","GCG_A_SAMP","GCG_G_SAMP","GCG_T_SAMP","GCT_A_SAMP","GCT_G_SAMP","GCT_T_SAMP","GGA_A_SAMP","GGA_C_SAMP","GGA_T_SAMP","GGC_A_SAMP","GGC_C_SAMP","GGC_T_SAMP","GGG_A_SAMP","GGG_C_SAMP","GGG_T_SAMP","GGT_A_SAMP","GGT_C_SAMP","GGT_T_SAMP","GTA_A_SAMP","GTA_C_SAMP","GTA_G_SAMP","GTC_A_SAMP","GTC_C_SAMP","GTC_G_SAMP","GTG_A_SAMP","GTG_C_SAMP","GTG_G_SAMP","GTT_A_SAMP","GTT_C_SAMP","GTT_G_SAMP","TAA_C_SAMP","TAA_G_SAMP","TAA_T_SAMP","TAC_C_SAMP","TAC_G_SAMP","TAC_T_SAMP","TAG_C_SAMP","TAG_G_SAMP","TAG_T_SAMP","TAT_C_SAMP","TAT_G_SAMP","TAT_T_SAMP","TCA_A_SAMP","TCA_G_SAMP","TCA_T_SAMP","TCC_A_SAMP","TCC_G_SAMP","TCC_T_SAMP","TCG_A_SAMP","TCG_G_SAMP","TCG_T_SAMP","TCT_A_SAMP","TCT_G_SAMP","TCT_T_SAMP","TGA_A_SAMP","TGA_C_SAMP","TGA_T_SAMP","TGC_A_SAMP","TGC_C_SAMP","TGC_T_SAMP","TGG_A_SAMP","TGG_C_SAMP","TGG_T_SAMP","TGT_A_SAMP","TGT_C_SAMP","TGT_T_SAMP","TTA_A_SAMP","TTA_C_SAMP","TTA_G_SAMP","TTC_A_SAMP","TTC_C_SAMP","TTC_G_SAMP","TTG_A_SAMP","TTG_C_SAMP","TTG_G_SAMP","TTT_A_SAMP","TTT_C_SAMP","TTT_G_SAMP","POP_FULL","AAA_C_FULL","AAA_G_FULL","AAA_T_FULL","AAC_C_FULL","AAC_G_FULL","AAC_T_FULL","AAG_C_FULL","AAG_G_FULL","AAG_T_FULL","AAT_C_FULL","AAT_G_FULL","AAT_T_FULL","ACA_A_FULL","ACA_G_FULL","ACA_T_FULL","ACC_A_FULL","ACC_G_FULL","ACC_T_FULL","ACG_A_FULL","ACG_G_FULL","ACG_T_FULL","ACT_A_FULL","ACT_G_FULL","ACT_T_FULL","AGA_A_FULL","AGA_C_FULL","AGA_T_FULL","AGC_A_FULL","AGC_C_FULL","AGC_T_FULL","AGG_A_FULL","AGG_C_FULL","AGG_T_FULL","AGT_A_FULL","AGT_C_FULL","AGT_T_FULL","ATA_A_FULL","ATA_C_FULL","ATA_G_FULL","ATC_A_FULL","ATC_C_FULL","ATC_G_FULL","ATG_A_FULL","ATG_C_FULL","ATG_G_FULL","ATT_A_FULL","ATT_C_FULL","ATT_G_FULL","CAA_C_FULL","CAA_G_FULL","CAA_T_FULL","CAC_C_FULL","CAC_G_FULL","CAC_T_FULL","CAG_C_FULL","CAG_G_FULL","CAG_T_FULL","CAT_C_FULL","CAT_G_FULL","CAT_T_FULL","CCA_A_FULL","CCA_G_FULL","CCA_T_FULL","CCC_A_FULL","CCC_G_FULL","CCC_T_FULL","CCG_A_FULL","CCG_G_FULL","CCG_T_FULL","CCT_A_FULL","CCT_G_FULL","CCT_T_FULL","CGA_A_FULL","CGA_C_FULL","CGA_T_FULL","CGC_A_FULL","CGC_C_FULL","CGC_T_FULL","CGG_A_FULL","CGG_C_FULL","CGG_T_FULL","CGT_A_FULL","CGT_C_FULL","CGT_T_FULL","CTA_A_FULL","CTA_C_FULL","CTA_G_FULL","CTC_A_FULL","CTC_C_FULL","CTC_G_FULL","CTG_A_FULL","CTG_C_FULL","CTG_G_FULL","CTT_A_FULL","CTT_C_FULL","CTT_G_FULL","GAA_C_FULL","GAA_G_FULL","GAA_T_FULL","GAC_C_FULL","GAC_G_FULL","GAC_T_FULL","GAG_C_FULL","GAG_G_FULL","GAG_T_FULL","GAT_C_FULL","GAT_G_FULL","GAT_T_FULL","GCA_A_FULL","GCA_G_FULL","GCA_T_FULL","GCC_A_FULL","GCC_G_FULL","GCC_T_FULL","GCG_A_FULL","GCG_G_FULL","GCG_T_FULL","GCT_A_FULL","GCT_G_FULL","GCT_T_FULL","GGA_A_FULL","GGA_C_FULL","GGA_T_FULL","GGC_A_FULL","GGC_C_FULL","GGC_T_FULL","GGG_A_FULL","GGG_C_FULL","GGG_T_FULL","GGT_A_FULL","GGT_C_FULL","GGT_T_FULL","GTA_A_FULL","GTA_C_FULL","GTA_G_FULL","GTC_A_FULL","GTC_C_FULL","GTC_G_FULL","GTG_A_FULL","GTG_C_FULL","GTG_G_FULL","GTT_A_FULL","GTT_C_FULL","GTT_G_FULL","TAA_C_FULL","TAA_G_FULL","TAA_T_FULL","TAC_C_FULL","TAC_G_FULL","TAC_T_FULL","TAG_C_FULL","TAG_G_FULL","TAG_T_FULL","TAT_C_FULL","TAT_G_FULL","TAT_T_FULL","TCA_A_FULL","TCA_G_FULL","TCA_T_FULL","TCC_A_FULL","TCC_G_FULL","TCC_T_FULL","TCG_A_FULL","TCG_G_FULL","TCG_T_FULL","TCT_A_FULL","TCT_G_FULL","TCT_T_FULL","TGA_A_FULL","TGA_C_FULL","TGA_T_FULL","TGC_A_FULL","TGC_C_FULL","TGC_T_FULL","TGG_A_FULL","TGG_C_FULL","TGG_T_FULL","TGT_A_FULL","TGT_C_FULL","TGT_T_FULL","TTA_A_FULL","TTA_C_FULL","TTA_G_FULL","TTC_A_FULL","TTC_C_FULL","TTC_G_FULL","TTG_A_FULL","TTG_C_FULL","TTG_G_FULL","TTT_A_FULL","TTT_C_FULL","TTT_G_FULL"
FROM 
    MUTGEN_SAMPLED_AVG
INNER JOIN 
    MUTGEN_FULLSAMPLE_AVG
ON
    MUTGEN_SAMPLED_AVG.POP_SAMP = MUTGEN_FULLSAMPLE_AVG.POP_FULL


-- Step 4
-- Subtract the AVG distribution of mutation type in 
-- entire population from the given sample size and
-- return it as ABS number multipled by 100.
-- MUTGEN_DIFF_ABS
SELECT 
    POP_SAMP AS POP,
    SAMPLE_SIZE,
ABS(AAA_C_FULL - AAA_C_SAMP)*100 AS AAA_C,
ABS(AAA_G_FULL - AAA_G_SAMP)*100 AS AAA_G,
ABS(AAA_T_FULL - AAA_T_SAMP)*100 AS AAA_T,
ABS(AAC_C_FULL - AAC_C_SAMP)*100 AS AAC_C,
ABS(AAC_G_FULL - AAC_G_SAMP)*100 AS AAC_G,
ABS(AAC_T_FULL - AAC_T_SAMP)*100 AS AAC_T,
ABS(AAG_C_FULL - AAG_C_SAMP)*100 AS AAG_C,
ABS(AAG_G_FULL - AAG_G_SAMP)*100 AS AAG_G,
ABS(AAG_T_FULL - AAG_T_SAMP)*100 AS AAG_T,
ABS(AAT_C_FULL - AAT_C_SAMP)*100 AS AAT_C,
ABS(AAT_G_FULL - AAT_G_SAMP)*100 AS AAT_G,
ABS(AAT_T_FULL - AAT_T_SAMP)*100 AS AAT_T,
ABS(ACA_A_FULL - ACA_A_SAMP)*100 AS ACA_A,
ABS(ACA_G_FULL - ACA_G_SAMP)*100 AS ACA_G,
ABS(ACA_T_FULL - ACA_T_SAMP)*100 AS ACA_T,
ABS(ACC_A_FULL - ACC_A_SAMP)*100 AS ACC_A,
ABS(ACC_G_FULL - ACC_G_SAMP)*100 AS ACC_G,
ABS(ACC_T_FULL - ACC_T_SAMP)*100 AS ACC_T,
ABS(ACG_A_FULL - ACG_A_SAMP)*100 AS ACG_A,
ABS(ACG_G_FULL - ACG_G_SAMP)*100 AS ACG_G,
ABS(ACG_T_FULL - ACG_T_SAMP)*100 AS ACG_T,
ABS(ACT_A_FULL - ACT_A_SAMP)*100 AS ACT_A,
ABS(ACT_G_FULL - ACT_G_SAMP)*100 AS ACT_G,
ABS(ACT_T_FULL - ACT_T_SAMP)*100 AS ACT_T,
ABS(AGA_A_FULL - AGA_A_SAMP)*100 AS AGA_A,
ABS(AGA_C_FULL - AGA_C_SAMP)*100 AS AGA_C,
ABS(AGA_T_FULL - AGA_T_SAMP)*100 AS AGA_T,
ABS(AGC_A_FULL - AGC_A_SAMP)*100 AS AGC_A,
ABS(AGC_C_FULL - AGC_C_SAMP)*100 AS AGC_C,
ABS(AGC_T_FULL - AGC_T_SAMP)*100 AS AGC_T,
ABS(AGG_A_FULL - AGG_A_SAMP)*100 AS AGG_A,
ABS(AGG_C_FULL - AGG_C_SAMP)*100 AS AGG_C,
ABS(AGG_T_FULL - AGG_T_SAMP)*100 AS AGG_T,
ABS(AGT_A_FULL - AGT_A_SAMP)*100 AS AGT_A,
ABS(AGT_C_FULL - AGT_C_SAMP)*100 AS AGT_C,
ABS(AGT_T_FULL - AGT_T_SAMP)*100 AS AGT_T,
ABS(ATA_A_FULL - ATA_A_SAMP)*100 AS ATA_A,
ABS(ATA_C_FULL - ATA_C_SAMP)*100 AS ATA_C,
ABS(ATA_G_FULL - ATA_G_SAMP)*100 AS ATA_G,
ABS(ATC_A_FULL - ATC_A_SAMP)*100 AS ATC_A,
ABS(ATC_C_FULL - ATC_C_SAMP)*100 AS ATC_C,
ABS(ATC_G_FULL - ATC_G_SAMP)*100 AS ATC_G,
ABS(ATG_A_FULL - ATG_A_SAMP)*100 AS ATG_A,
ABS(ATG_C_FULL - ATG_C_SAMP)*100 AS ATG_C,
ABS(ATG_G_FULL - ATG_G_SAMP)*100 AS ATG_G,
ABS(ATT_A_FULL - ATT_A_SAMP)*100 AS ATT_A,
ABS(ATT_C_FULL - ATT_C_SAMP)*100 AS ATT_C,
ABS(ATT_G_FULL - ATT_G_SAMP)*100 AS ATT_G,
ABS(CAA_C_FULL - CAA_C_SAMP)*100 AS CAA_C,
ABS(CAA_G_FULL - CAA_G_SAMP)*100 AS CAA_G,
ABS(CAA_T_FULL - CAA_T_SAMP)*100 AS CAA_T,
ABS(CAC_C_FULL - CAC_C_SAMP)*100 AS CAC_C,
ABS(CAC_G_FULL - CAC_G_SAMP)*100 AS CAC_G,
ABS(CAC_T_FULL - CAC_T_SAMP)*100 AS CAC_T,
ABS(CAG_C_FULL - CAG_C_SAMP)*100 AS CAG_C,
ABS(CAG_G_FULL - CAG_G_SAMP)*100 AS CAG_G,
ABS(CAG_T_FULL - CAG_T_SAMP)*100 AS CAG_T,
ABS(CAT_C_FULL - CAT_C_SAMP)*100 AS CAT_C,
ABS(CAT_G_FULL - CAT_G_SAMP)*100 AS CAT_G,
ABS(CAT_T_FULL - CAT_T_SAMP)*100 AS CAT_T,
ABS(CCA_A_FULL - CCA_A_SAMP)*100 AS CCA_A,
ABS(CCA_G_FULL - CCA_G_SAMP)*100 AS CCA_G,
ABS(CCA_T_FULL - CCA_T_SAMP)*100 AS CCA_T,
ABS(CCC_A_FULL - CCC_A_SAMP)*100 AS CCC_A,
ABS(CCC_G_FULL - CCC_G_SAMP)*100 AS CCC_G,
ABS(CCC_T_FULL - CCC_T_SAMP)*100 AS CCC_T,
ABS(CCG_A_FULL - CCG_A_SAMP)*100 AS CCG_A,
ABS(CCG_G_FULL - CCG_G_SAMP)*100 AS CCG_G,
ABS(CCG_T_FULL - CCG_T_SAMP)*100 AS CCG_T,
ABS(CCT_A_FULL - CCT_A_SAMP)*100 AS CCT_A,
ABS(CCT_G_FULL - CCT_G_SAMP)*100 AS CCT_G,
ABS(CCT_T_FULL - CCT_T_SAMP)*100 AS CCT_T,
ABS(CGA_A_FULL - CGA_A_SAMP)*100 AS CGA_A,
ABS(CGA_C_FULL - CGA_C_SAMP)*100 AS CGA_C,
ABS(CGA_T_FULL - CGA_T_SAMP)*100 AS CGA_T,
ABS(CGC_A_FULL - CGC_A_SAMP)*100 AS CGC_A,
ABS(CGC_C_FULL - CGC_C_SAMP)*100 AS CGC_C,
ABS(CGC_T_FULL - CGC_T_SAMP)*100 AS CGC_T,
ABS(CGG_A_FULL - CGG_A_SAMP)*100 AS CGG_A,
ABS(CGG_C_FULL - CGG_C_SAMP)*100 AS CGG_C,
ABS(CGG_T_FULL - CGG_T_SAMP)*100 AS CGG_T,
ABS(CGT_A_FULL - CGT_A_SAMP)*100 AS CGT_A,
ABS(CGT_C_FULL - CGT_C_SAMP)*100 AS CGT_C,
ABS(CGT_T_FULL - CGT_T_SAMP)*100 AS CGT_T,
ABS(CTA_A_FULL - CTA_A_SAMP)*100 AS CTA_A,
ABS(CTA_C_FULL - CTA_C_SAMP)*100 AS CTA_C,
ABS(CTA_G_FULL - CTA_G_SAMP)*100 AS CTA_G,
ABS(CTC_A_FULL - CTC_A_SAMP)*100 AS CTC_A,
ABS(CTC_C_FULL - CTC_C_SAMP)*100 AS CTC_C,
ABS(CTC_G_FULL - CTC_G_SAMP)*100 AS CTC_G,
ABS(CTG_A_FULL - CTG_A_SAMP)*100 AS CTG_A,
ABS(CTG_C_FULL - CTG_C_SAMP)*100 AS CTG_C,
ABS(CTG_G_FULL - CTG_G_SAMP)*100 AS CTG_G,
ABS(CTT_A_FULL - CTT_A_SAMP)*100 AS CTT_A,
ABS(CTT_C_FULL - CTT_C_SAMP)*100 AS CTT_C,
ABS(CTT_G_FULL - CTT_G_SAMP)*100 AS CTT_G,
ABS(GAA_C_FULL - GAA_C_SAMP)*100 AS GAA_C,
ABS(GAA_G_FULL - GAA_G_SAMP)*100 AS GAA_G,
ABS(GAA_T_FULL - GAA_T_SAMP)*100 AS GAA_T,
ABS(GAC_C_FULL - GAC_C_SAMP)*100 AS GAC_C,
ABS(GAC_G_FULL - GAC_G_SAMP)*100 AS GAC_G,
ABS(GAC_T_FULL - GAC_T_SAMP)*100 AS GAC_T,
ABS(GAG_C_FULL - GAG_C_SAMP)*100 AS GAG_C,
ABS(GAG_G_FULL - GAG_G_SAMP)*100 AS GAG_G,
ABS(GAG_T_FULL - GAG_T_SAMP)*100 AS GAG_T,
ABS(GAT_C_FULL - GAT_C_SAMP)*100 AS GAT_C,
ABS(GAT_G_FULL - GAT_G_SAMP)*100 AS GAT_G,
ABS(GAT_T_FULL - GAT_T_SAMP)*100 AS GAT_T,
ABS(GCA_A_FULL - GCA_A_SAMP)*100 AS GCA_A,
ABS(GCA_G_FULL - GCA_G_SAMP)*100 AS GCA_G,
ABS(GCA_T_FULL - GCA_T_SAMP)*100 AS GCA_T,
ABS(GCC_A_FULL - GCC_A_SAMP)*100 AS GCC_A,
ABS(GCC_G_FULL - GCC_G_SAMP)*100 AS GCC_G,
ABS(GCC_T_FULL - GCC_T_SAMP)*100 AS GCC_T,
ABS(GCG_A_FULL - GCG_A_SAMP)*100 AS GCG_A,
ABS(GCG_G_FULL - GCG_G_SAMP)*100 AS GCG_G,
ABS(GCG_T_FULL - GCG_T_SAMP)*100 AS GCG_T,
ABS(GCT_A_FULL - GCT_A_SAMP)*100 AS GCT_A,
ABS(GCT_G_FULL - GCT_G_SAMP)*100 AS GCT_G,
ABS(GCT_T_FULL - GCT_T_SAMP)*100 AS GCT_T,
ABS(GGA_A_FULL - GGA_A_SAMP)*100 AS GGA_A,
ABS(GGA_C_FULL - GGA_C_SAMP)*100 AS GGA_C,
ABS(GGA_T_FULL - GGA_T_SAMP)*100 AS GGA_T,
ABS(GGC_A_FULL - GGC_A_SAMP)*100 AS GGC_A,
ABS(GGC_C_FULL - GGC_C_SAMP)*100 AS GGC_C,
ABS(GGC_T_FULL - GGC_T_SAMP)*100 AS GGC_T,
ABS(GGG_A_FULL - GGG_A_SAMP)*100 AS GGG_A,
ABS(GGG_C_FULL - GGG_C_SAMP)*100 AS GGG_C,
ABS(GGG_T_FULL - GGG_T_SAMP)*100 AS GGG_T,
ABS(GGT_A_FULL - GGT_A_SAMP)*100 AS GGT_A,
ABS(GGT_C_FULL - GGT_C_SAMP)*100 AS GGT_C,
ABS(GGT_T_FULL - GGT_T_SAMP)*100 AS GGT_T,
ABS(GTA_A_FULL - GTA_A_SAMP)*100 AS GTA_A,
ABS(GTA_C_FULL - GTA_C_SAMP)*100 AS GTA_C,
ABS(GTA_G_FULL - GTA_G_SAMP)*100 AS GTA_G,
ABS(GTC_A_FULL - GTC_A_SAMP)*100 AS GTC_A,
ABS(GTC_C_FULL - GTC_C_SAMP)*100 AS GTC_C,
ABS(GTC_G_FULL - GTC_G_SAMP)*100 AS GTC_G,
ABS(GTG_A_FULL - GTG_A_SAMP)*100 AS GTG_A,
ABS(GTG_C_FULL - GTG_C_SAMP)*100 AS GTG_C,
ABS(GTG_G_FULL - GTG_G_SAMP)*100 AS GTG_G,
ABS(GTT_A_FULL - GTT_A_SAMP)*100 AS GTT_A,
ABS(GTT_C_FULL - GTT_C_SAMP)*100 AS GTT_C,
ABS(GTT_G_FULL - GTT_G_SAMP)*100 AS GTT_G,
ABS(TAA_C_FULL - TAA_C_SAMP)*100 AS TAA_C,
ABS(TAA_G_FULL - TAA_G_SAMP)*100 AS TAA_G,
ABS(TAA_T_FULL - TAA_T_SAMP)*100 AS TAA_T,
ABS(TAC_C_FULL - TAC_C_SAMP)*100 AS TAC_C,
ABS(TAC_G_FULL - TAC_G_SAMP)*100 AS TAC_G,
ABS(TAC_T_FULL - TAC_T_SAMP)*100 AS TAC_T,
ABS(TAG_C_FULL - TAG_C_SAMP)*100 AS TAG_C,
ABS(TAG_G_FULL - TAG_G_SAMP)*100 AS TAG_G,
ABS(TAG_T_FULL - TAG_T_SAMP)*100 AS TAG_T,
ABS(TAT_C_FULL - TAT_C_SAMP)*100 AS TAT_C,
ABS(TAT_G_FULL - TAT_G_SAMP)*100 AS TAT_G,
ABS(TAT_T_FULL - TAT_T_SAMP)*100 AS TAT_T,
ABS(TCA_A_FULL - TCA_A_SAMP)*100 AS TCA_A,
ABS(TCA_G_FULL - TCA_G_SAMP)*100 AS TCA_G,
ABS(TCA_T_FULL - TCA_T_SAMP)*100 AS TCA_T,
ABS(TCC_A_FULL - TCC_A_SAMP)*100 AS TCC_A,
ABS(TCC_G_FULL - TCC_G_SAMP)*100 AS TCC_G,
ABS(TCC_T_FULL - TCC_T_SAMP)*100 AS TCC_T,
ABS(TCG_A_FULL - TCG_A_SAMP)*100 AS TCG_A,
ABS(TCG_G_FULL - TCG_G_SAMP)*100 AS TCG_G,
ABS(TCG_T_FULL - TCG_T_SAMP)*100 AS TCG_T,
ABS(TCT_A_FULL - TCT_A_SAMP)*100 AS TCT_A,
ABS(TCT_G_FULL - TCT_G_SAMP)*100 AS TCT_G,
ABS(TCT_T_FULL - TCT_T_SAMP)*100 AS TCT_T,
ABS(TGA_A_FULL - TGA_A_SAMP)*100 AS TGA_A,
ABS(TGA_C_FULL - TGA_C_SAMP)*100 AS TGA_C,
ABS(TGA_T_FULL - TGA_T_SAMP)*100 AS TGA_T,
ABS(TGC_A_FULL - TGC_A_SAMP)*100 AS TGC_A,
ABS(TGC_C_FULL - TGC_C_SAMP)*100 AS TGC_C,
ABS(TGC_T_FULL - TGC_T_SAMP)*100 AS TGC_T,
ABS(TGG_A_FULL - TGG_A_SAMP)*100 AS TGG_A,
ABS(TGG_C_FULL - TGG_C_SAMP)*100 AS TGG_C,
ABS(TGG_T_FULL - TGG_T_SAMP)*100 AS TGG_T,
ABS(TGT_A_FULL - TGT_A_SAMP)*100 AS TGT_A,
ABS(TGT_C_FULL - TGT_C_SAMP)*100 AS TGT_C,
ABS(TGT_T_FULL - TGT_T_SAMP)*100 AS TGT_T,
ABS(TTA_A_FULL - TTA_A_SAMP)*100 AS TTA_A,
ABS(TTA_C_FULL - TTA_C_SAMP)*100 AS TTA_C,
ABS(TTA_G_FULL - TTA_G_SAMP)*100 AS TTA_G,
ABS(TTC_A_FULL - TTC_A_SAMP)*100 AS TTC_A,
ABS(TTC_C_FULL - TTC_C_SAMP)*100 AS TTC_C,
ABS(TTC_G_FULL - TTC_G_SAMP)*100 AS TTC_G,
ABS(TTG_A_FULL - TTG_A_SAMP)*100 AS TTG_A,
ABS(TTG_C_FULL - TTG_C_SAMP)*100 AS TTG_C,
ABS(TTG_G_FULL - TTG_G_SAMP)*100 AS TTG_G,
ABS(TTT_A_FULL - TTT_A_SAMP)*100 AS TTT_A,
ABS(TTT_C_FULL - TTT_C_SAMP)*100 AS TTT_C,
ABS(TTT_G_FULL - TTT_G_SAMP)*100 AS TTT_G
FROM 
    MUTGEN_JOIN_FULL_SAMPLED


-- Step 5
-- Sum up the the differences calculated in previous step
-- MUTGEN_DIFF_ABS_TOTAL
SELECT 
    POP, 
    SAMPLE_SIZE, 
    (AAA_C + AAA_G + AAA_T + AAC_C + AAC_G + AAC_T + AAG_C + AAG_G + AAG_T + AAT_C + AAT_G + AAT_T + ACA_A + ACA_G + ACA_T + ACC_A + ACC_G + ACC_T + ACG_A + ACG_G + ACG_T + ACT_A + ACT_G + ACT_T + AGA_A + AGA_C + AGA_T + AGC_A + AGC_C + AGC_T + AGG_A + AGG_C + AGG_T + AGT_A + AGT_C + AGT_T + ATA_A + ATA_C + ATA_G + ATC_A + ATC_C + ATC_G + ATG_A + ATG_C + ATG_G + ATT_A + ATT_C + ATT_G + CAA_C + CAA_G + CAA_T + CAC_C + CAC_G + CAC_T + CAG_C + CAG_G + CAG_T + CAT_C + CAT_G + CAT_T + CCA_A + CCA_G + CCA_T + CCC_A + CCC_G + CCC_T + CCG_A + CCG_G + CCG_T + CCT_A + CCT_G + CCT_T + CGA_A + CGA_C + CGA_T + CGC_A + CGC_C + CGC_T + CGG_A + CGG_C + CGG_T + CGT_A + CGT_C + CGT_T + CTA_A + CTA_C + CTA_G + CTC_A + CTC_C + CTC_G + CTG_A + CTG_C + CTG_G + CTT_A + CTT_C + CTT_G + GAA_C + GAA_G + GAA_T + GAC_C + GAC_G + GAC_T + GAG_C + GAG_G + GAG_T + GAT_C + GAT_G + GAT_T + GCA_A + GCA_G + GCA_T + GCC_A + GCC_G + GCC_T + GCG_A + GCG_G + GCG_T + GCT_A + GCT_G + GCT_T + GGA_A + GGA_C + GGA_T + GGC_A + GGC_C + GGC_T + GGG_A + GGG_C + GGG_T + GGT_A + GGT_C + GGT_T + GTA_A + GTA_C + GTA_G + GTC_A + GTC_C + GTC_G + GTG_A + GTG_C + GTG_G + GTT_A + GTT_C + GTT_G + TAA_C + TAA_G + TAA_T + TAC_C + TAC_G + TAC_T + TAG_C + TAG_G + TAG_T + TAT_C + TAT_G + TAT_T + TCA_A + TCA_G + TCA_T + TCC_A + TCC_G + TCC_T + TCG_A + TCG_G + TCG_T + TCT_A + TCT_G + TCT_T + TGA_A + TGA_C + TGA_T + TGC_A + TGC_C + TGC_T + TGG_A + TGG_C + TGG_T + TGT_A + TGT_C + TGT_T + TTA_A + TTA_C + TTA_G + TTC_A + TTC_C + TTC_G + TTG_A + TTG_C + TTG_G + TTT_A + TTT_C + TTT_G) AS DIFF_PERCENTAGE
FROM 
    MUTGEN_DIFF_ABS